/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        alpha {
            bindings = <
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   TAB   |    Q    |    W    |    E    |    R    |    T    |                           |    Y    |    U    |    I    |    O    |    P    |   `   |
// |  LCTRL  |    A    |    S    |    D    |    F    |    G    |                           |    H    |    J    |    K    |    L    |    ;    |   '   |
// | LSHIFT  |    Z    |    X    |    C    |    V    |    B    |   key_repeat  | caps_word |    N    |    M    |    ,    |    .    |    /    |   \   |
//                               |  LALT   |   LGUI  |   SPC   |   RET         |   BSPC    |   SPC   |   ESC   |   RALT  |
&kp TAB        &kp Q  &kp W  &kp E     &kp R     &kp T                                 &kp Y        &kp U    &kp I      &kp O    &kp P     &kp GRAVE
&kp LCTRL      &kp A  &kp S  &kp D     &kp F     &kp G                                 &kp H        &kp J    &kp K      &kp L    &kp SEMI  &kp SQT
&mt LSHFT F19  &kp Z  &kp X  &kp C     &kp V     &kp B        &key_repeat  &caps_word  &kp N        &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                             &kp LALT  &kp LGUI  &lt 1 SPACE  &lt 3 RET    &kp BSPC    &lt 2 SPACE  &kp ESC  &kp RALT
            >;
        };

        symbol {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |  LG(TAB)  |   F13    |   PG_UP    |   F14    |   PLUS  |   LBKT  |                            |   RBKT  |   AMPS  |  STAR  |  none  |  none |   `   |
// |  LCTRL    |   HOME   |   PG_DN    |   END    |  MINUS  |   LPAR  |                            |   RPAR  |   DLLR  |  PRCNT |  CARET |  ;    |   '   |
// |  LSHIFT   |  LA(F13) |  LA(LG(F)) |  LA(F14) |  EQUAL  |   LBRC  |   key_repeat   | caps_word |   RBRC  |  EXCL   |   AT   |  HASH  |   /   |   \   |
//                                     |   LALT   |   LGUI  |   none  |   RET          |  BSPC     |   SPC   |  ESC    |  RALT  |
            bindings = <
&kp LG(TAB)  &kp F13      &kp PG_UP      &kp F14       &kp PLUS   &kp LBKT                           &kp RBKT     &kp AMPS  &kp STAR       &none      &none     &kp GRAVE
&kp LCTRL    &kp HOME     &kp PG_DN      &kp END       &kp MINUS  &kp LPAR                           &kp RPAR     &kp DLLR  &kp PRCNT      &kp CARET  &kp SEMI  &kp SQT
&kp LSHIFT   &kp LA(F13)  &kp LA(LG(F))  &kp LA(F14)   &kp EQUAL  &kp LBRC  &key_repeat  &caps_word  &kp RBRC     &kp EXCL  &kp AT         &kp HASH   &kp FSLH  &kp BSLH
                                         &kp LEFT_ALT  &kp LCMD   &none     &lt 3 RET    &kp BSPC    &lt 2 SPACE  &kp ESC   &kp RIGHT_ALT
            >;
        };

        number {
            bindings = <
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   TAB   |    F7    |    F8    |    F9    |   PLUS   |    F12   |                            |  STAR   |   N7    |   N8    |   N9   |  DOT  |   `   |
// |  LCTRL  |    F4    |    F5    |    F6    |  MINUS   |    F11   |                            |  SLASH  |   N4    |   N5    |   N6   |   ;   |   '   |
// | LSHIFT  |    F1    |    F2    |    F3    |  EQUAL   |    F10   |   key_repeat   | caps_word |   N0    |   N1    |   N2    |   N3   |   /   |   \   |
//                                 |  LALT    |   LGUI   |    SPC   |   RET          |   BSPC    |  none   |   ESC   |   RALT  |
&kp TAB     &kp F7  &kp F8  &kp F9    &kp PLUS   &kp F12                               &kp STAR   &kp N7   &kp N8    &kp N9  &kp DOT   &kp GRAVE
&kp LCTRL   &kp F4  &kp F5  &kp F6    &kp MINUS  &kp F11                               &kp SLASH  &kp N4   &kp N5    &kp N6  &kp SEMI  &kp SQT
&kp LSHIFT  &kp F1  &kp F2  &kp F3    &kp EQUAL  &kp F10      &key_repeat  &caps_word  &kp N0     &kp N1   &kp N2    &kp N3  &kp FSLH  &kp BSLH
                            &kp LALT  &kp LCMD   &lt 1 SPACE  &lt 3 RET    &kp BSPC    &none      &kp ESC  &kp RALT
            >;
        };

        system {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   TAB   |  BT_SEL 0 |  BT_SEL 1 |  BT_SEL 2 |  BT_SEL 3 |  BT_SEL 4 |                              | LA(F13) |   F13   |   F14   |  LA(F14) |  none  |   BT_CLR  |
// |  LCTRL  |  RGB_HUI  |  RGB_SAI  |  RGB_BRI  |  RGB_SPI  |  RGB_EFF  |                              |   LEFT  |   DOWN  |   UP    |   RIGHT  |  none  |  OUT_TOG  |
// | LSHIFT  |  RGB_HUD  |  RGB_SAD  |  RGB_BRD  |  RGB_SPD  |  RGB_EFR  |  key_repeat  | LS(LA(LG(Y))) |   F15   |   F16   |   F17   |   F18    |  none  | sys_reset |
//                                   |  LALT     |  LGUI     |    SPC    |  none        |   DEL         |   SPC   |   ESC   |   RALT  |
            bindings = <
&kp TAB     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                                     &kp LA(F13)  &kp F13   &kp F14   &kp LA(F14)  &none  &bt BT_CLR
&kp LCTRL   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF                                  &kp LEFT     &kp DOWN  &kp UP    &kp RIGHT    &none  &out OUT_TOG
&kp LSHIFT  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &key_repeat  &kp LS(LA(LG(Y)))  &kp F15      &kp F16   &kp F17   &kp F18      &none  &sys_reset
                                              &kp LALT         &kp LCMD         &lt 1 SPACE      &none        &kp DEL            &lt 2 SPACE  &kp ESC   &kp RALT
            >;
        };
    };
};
